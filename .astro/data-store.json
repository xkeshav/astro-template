[
  ["Map", 1, 2, 9, 10, 190, 191],
  "meta::meta",
  ["Map", 3, 4, 5, 6, 7, 8],
  "astro-version",
  "5.1.1",
  "content-config-digest",
  "18a6aec2e685c427",
  "astro-config-digest",
  "{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://app.com\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"server\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true},\"redirects\":{},\"prefetch\":true,\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":false},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"svg\":{\"mode\":\"inline\"}},\"legacy\":{\"collections\":false}}",
  "blogs",
  ["Map", 11, 12, 56, 92, 123, 124, 146, 147],
  "technology-used",
  { "id": 11, "data": 13, "body": 17, "filePath": 18, "digest": 19, "rendered": 20 },
  { "title": 14, "description": 15, "date": 16 },
  "The tech stack that we preferred",
  "The tech stack that we work with and why we choose it ? ",
  "24/12/2024",
  "# **Project Technology Stack Documentation**\n\n## **Frontend**\n\n### **Astro.js**\n\n- **Purpose**: Utilized as the core frontend framework for building the project.\n- **Features**:\n  - File-based routing.\n  - Supports server-side rendering (SSR) and static site generation (SSG).\n  - Integrates seamlessly with other frameworks like React.\n\n### **React**\n\n- **Purpose**: Used for creating interactive and dynamic components within the Astro.js framework.\n- **Features**:\n  - Component-based architecture.\n  - State management and lifecycle methods.\n\n### **Styling**\n\n#### **Tailwind CSS**\n\n- **Purpose**: A utility-first CSS framework used for styling.\n- **Features**:\n  - Rapid prototyping with predefined classes.\n  - Highly customizable via a configuration file.\n\n### **Component Library**\n\n#### **shadcn/ui**\n\n- **Purpose**: A pre-built React-based component library for faster UI development.\n- **Features**:\n  - Offers accessible and customizable components.\n  - Works seamlessly with Tailwind CSS.\n\n### **Icons**\n\n- **Purpose**: Used for visual enhancements and icons across the application.\n- **Libraries**:\n  - **Astro Icons**: Icon library designed for use in Astro.js.\n  - **React Icons**: A collection of popular icon libraries for React.\n  - **Lucide Icons**: Modern, consistent, and open-source icon library.\n\n### **State Management**\n\n#### **Zustand**\n\n- **Purpose**: Lightweight state management library for handling global state in the frontend.\n- **Features**:\n  - Minimal boilerplate.\n  - Simple and scalable API for managing state.\n\n### **Data Validation**\n\n#### **Zod**\n\n- **Purpose**: Schema-based data validation library.\n- **Features**:\n  - Runtime validation for form data and API responses.\n  - TypeScript integration for type safety.\n\n---\n\n## **Backend**\n\n### **Node.js**\n\n- **Purpose**: Backend runtime environment.\n- **Features**:\n  - Non-blocking, event-driven architecture for handling asynchronous operations.\n  - Large ecosystem of libraries and tools.\n\n### **Hono.js Framework**\n\n- **Purpose**: Lightweight, high-performance framework for building backend APIs.\n- **Features**:\n  - Minimalistic API design.\n  - Excellent for creating RESTful services.\n\n---\n\n## **Database**\n\n### **MongoDB**\n\n- **Purpose**: NoSQL database used for storing application data.\n- **Features**:\n  - Document-oriented storage.\n  - Scalable and flexible schema design.\n\n### **Mongoose**\n\n- **Purpose**: Object Relational Mapping (ORM) library for MongoDB.\n- **Features**:\n  - Simplifies data modeling and validation.\n  - Provides built-in schema and middleware support.\n\n---\n\n## **Other Tools**\n\n### **Code Formatting & Linting**\n\n- **Prettier**: For consistent code formatting.\n- **ESLint**: For identifying and fixing coding errors.",
  "src/content/blog/technology-used.md",
  "f299fb307df21153",
  { "html": 21, "metadata": 22 },
  "\u003Ch1 id=\"project-technology-stack-documentation\">\u003Cstrong>Project Technology Stack Documentation\u003C/strong>\u003C/h1>\n\u003Ch2 id=\"frontend\">\u003Cstrong>Frontend\u003C/strong>\u003C/h2>\n\u003Ch3 id=\"astrojs\">\u003Cstrong>Astro.js\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Utilized as the core frontend framework for building the project.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>File-based routing.\u003C/li>\n\u003Cli>Supports server-side rendering (SSR) and static site generation (SSG).\u003C/li>\n\u003Cli>Integrates seamlessly with other frameworks like React.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"react\">\u003Cstrong>React\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Used for creating interactive and dynamic components within the Astro.js framework.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Component-based architecture.\u003C/li>\n\u003Cli>State management and lifecycle methods.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"styling\">\u003Cstrong>Styling\u003C/strong>\u003C/h3>\n\u003Ch4 id=\"tailwind-css\">\u003Cstrong>Tailwind CSS\u003C/strong>\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: A utility-first CSS framework used for styling.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Rapid prototyping with predefined classes.\u003C/li>\n\u003Cli>Highly customizable via a configuration file.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"component-library\">\u003Cstrong>Component Library\u003C/strong>\u003C/h3>\n\u003Ch4 id=\"shadcnui\">\u003Cstrong>shadcn/ui\u003C/strong>\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: A pre-built React-based component library for faster UI development.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Offers accessible and customizable components.\u003C/li>\n\u003Cli>Works seamlessly with Tailwind CSS.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"icons\">\u003Cstrong>Icons\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Used for visual enhancements and icons across the application.\u003C/li>\n\u003Cli>\u003Cstrong>Libraries\u003C/strong>:\n\u003Cul>\n\u003Cli>\u003Cstrong>Astro Icons\u003C/strong>: Icon library designed for use in Astro.js.\u003C/li>\n\u003Cli>\u003Cstrong>React Icons\u003C/strong>: A collection of popular icon libraries for React.\u003C/li>\n\u003Cli>\u003Cstrong>Lucide Icons\u003C/strong>: Modern, consistent, and open-source icon library.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"state-management\">\u003Cstrong>State Management\u003C/strong>\u003C/h3>\n\u003Ch4 id=\"zustand\">\u003Cstrong>Zustand\u003C/strong>\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Lightweight state management library for handling global state in the frontend.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Minimal boilerplate.\u003C/li>\n\u003Cli>Simple and scalable API for managing state.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"data-validation\">\u003Cstrong>Data Validation\u003C/strong>\u003C/h3>\n\u003Ch4 id=\"zod\">\u003Cstrong>Zod\u003C/strong>\u003C/h4>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Schema-based data validation library.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Runtime validation for form data and API responses.\u003C/li>\n\u003Cli>TypeScript integration for type safety.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"backend\">\u003Cstrong>Backend\u003C/strong>\u003C/h2>\n\u003Ch3 id=\"nodejs\">\u003Cstrong>Node.js\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Backend runtime environment.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Non-blocking, event-driven architecture for handling asynchronous operations.\u003C/li>\n\u003Cli>Large ecosystem of libraries and tools.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"honojs-framework\">\u003Cstrong>Hono.js Framework\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Lightweight, high-performance framework for building backend APIs.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Minimalistic API design.\u003C/li>\n\u003Cli>Excellent for creating RESTful services.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"database\">\u003Cstrong>Database\u003C/strong>\u003C/h2>\n\u003Ch3 id=\"mongodb\">\u003Cstrong>MongoDB\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: NoSQL database used for storing application data.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Document-oriented storage.\u003C/li>\n\u003Cli>Scalable and flexible schema design.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"mongoose\">\u003Cstrong>Mongoose\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Purpose\u003C/strong>: Object Relational Mapping (ORM) library for MongoDB.\u003C/li>\n\u003Cli>\u003Cstrong>Features\u003C/strong>:\n\u003Cul>\n\u003Cli>Simplifies data modeling and validation.\u003C/li>\n\u003Cli>Provides built-in schema and middleware support.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"other-tools\">\u003Cstrong>Other Tools\u003C/strong>\u003C/h2>\n\u003Ch3 id=\"code-formatting--linting\">\u003Cstrong>Code Formatting &#x26; Linting\u003C/strong>\u003C/h3>\n\u003Cul>\n\u003Cli>\u003Cstrong>Prettier\u003C/strong>: For consistent code formatting.\u003C/li>\n\u003Cli>\u003Cstrong>ESLint\u003C/strong>: For identifying and fixing coding errors.\u003C/li>\n\u003C/ul>",
  { "headings": 23, "imagePaths": 91, "frontmatter": 13 },
  [24, 28, 32, 36, 39, 42, 46, 49, 52, 55, 58, 61, 64, 67, 70, 73, 76, 79, 82, 85, 88],
  { "depth": 25, "slug": 26, "text": 27 },
  1,
  "project-technology-stack-documentation",
  "Project Technology Stack Documentation",
  { "depth": 29, "slug": 30, "text": 31 },
  2,
  "frontend",
  "Frontend",
  { "depth": 33, "slug": 34, "text": 35 },
  3,
  "astrojs",
  "Astro.js",
  { "depth": 33, "slug": 37, "text": 38 },
  "react",
  "React",
  { "depth": 33, "slug": 40, "text": 41 },
  "styling",
  "Styling",
  { "depth": 43, "slug": 44, "text": 45 },
  4,
  "tailwind-css",
  "Tailwind CSS",
  { "depth": 33, "slug": 47, "text": 48 },
  "component-library",
  "Component Library",
  { "depth": 43, "slug": 50, "text": 51 },
  "shadcnui",
  "shadcn/ui",
  { "depth": 33, "slug": 53, "text": 54 },
  "icons",
  "Icons",
  { "depth": 33, "slug": 56, "text": 57 },
  "state-management",
  "State Management",
  { "depth": 43, "slug": 59, "text": 60 },
  "zustand",
  "Zustand",
  { "depth": 33, "slug": 62, "text": 63 },
  "data-validation",
  "Data Validation",
  { "depth": 43, "slug": 65, "text": 66 },
  "zod",
  "Zod",
  { "depth": 29, "slug": 68, "text": 69 },
  "backend",
  "Backend",
  { "depth": 33, "slug": 71, "text": 72 },
  "nodejs",
  "Node.js",
  { "depth": 33, "slug": 74, "text": 75 },
  "honojs-framework",
  "Hono.js Framework",
  { "depth": 29, "slug": 77, "text": 78 },
  "database",
  "Database",
  { "depth": 33, "slug": 80, "text": 81 },
  "mongodb",
  "MongoDB",
  { "depth": 33, "slug": 83, "text": 84 },
  "mongoose",
  "Mongoose",
  { "depth": 29, "slug": 86, "text": 87 },
  "other-tools",
  "Other Tools",
  { "depth": 33, "slug": 89, "text": 90 },
  "code-formatting--linting",
  "Code Formatting & Linting",
  [],
  { "id": 56, "data": 93, "body": 97, "filePath": 98, "digest": 99, "rendered": 100 },
  { "title": 94, "description": 95, "date": 96 },
  "The new era of state management with Zustand ?",
  "The simple and easy to understand all about Zustand the new and simple way to manage the state in client side. ",
  "28/12/2024",
  "# Zustand Documentation\n\n## What is Zustand?\n\nZustand is a small, fast, and flexible state management library for React. It allows you to manage global state with minimal setup, using React hooks to access and modify the state directly within your components.\n\n---\n\n## How Zustand is Used in This Project\n\nIn this project, Zustand is used to manage the search state across the application. This includes handling the user's search query, selected category, price range, sorting options, and rating filters.\n\n---\n\n## Creating the Store\n\nWe create a Zustand store using the `create` function. The store manages various pieces of state related to search functionality, such as the search query, category, price range, sort options, and ratings.\n\n```ts\nimport { create } from \"zustand\";\n\ninterface SearchStore {\n  searchQuery: string;\n  selectCategory: string;\n  priceRange: string;\n  selectSortOption: string;\n  selectRating: string;\n\n  setSearchQuery: (query: string) => void;\n  setSelectCategory: (category: string) => void;\n  setPriceRange: (range: string) => void;\n  setSelectSortOption: (option: string) => void;\n  setSelectRating: (rating: string) => void;\n}\n\nconst useSearchStore = create\u003CSearchStore>((set) => ({\n  searchQuery: \"\",\n  selectCategory: \"\",\n  priceRange: \"\",\n  selectSortOption: \"\",\n  selectRating: \"\",\n\n  setSearchQuery: (query) => set({ searchQuery: query }),\n  setSelectCategory: (category) => set({ selectCategory: category }),\n  setPriceRange: (range) => set({ priceRange: range }),\n  setSelectSortOption: (option) => set({ selectSortOption: option }),\n  setSelectRating: (rating) => set({ selectRating: rating })\n}));\n\nexport default useSearchStore;\n```\n\n#### Store State and Actions\n\n- **State Variables:**\n\n  - searchQuery: The current search query input by the user.\n  - selectCategory: The category filter selected by the user.\n  - priceRange: The price range filter.\n  - selectSortOption: The sort option applied to the search results.\n  - selectRating: The rating filter applied to the results.\n\n- **Actions (Setters):**\n\n  - setSearchQuery(query): Updates the search query.\n  - setSelectCategory(category): Updates the selected category.\n  - setPriceRange(range): Updates the price range.\n  - setSelectSortOption(option): Updates the sorting option.\n  - setSelectRating(rating): Updates the selected rating.\n\n#### Accessing the Store in Components\n\nTo use Zustand state and actions in your React components, you use the useSearchStore hook.\n\n**Example: Search Input Component**\nThe SearchInput component allows users to input a search query. It uses the global searchQuery from the store and updates it with setSearchQuery:\n\n```ts\nconst SearchInput = () => {\n  const { searchQuery, setSearchQuery } = useSearchStore();\n\n  return (\n    \u003CInput\n      type=\"search\"\n      value={searchQuery}\n      onChange={(e) => setSearchQuery(e.target.value)}\n      placeholder=\"Search...\"\n      className=\"search-input\"\n    />\n  );\n};\n```",
  "src/content/blog/state-management.md",
  "53be6a07242423c2",
  { "html": 101, "metadata": 102 },
  "\u003Ch1 id=\"zustand-documentation\">Zustand Documentation\u003C/h1>\n\u003Ch2 id=\"what-is-zustand\">What is Zustand?\u003C/h2>\n\u003Cp>Zustand is a small, fast, and flexible state management library for React. It allows you to manage global state with minimal setup, using React hooks to access and modify the state directly within your components.\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"how-zustand-is-used-in-this-project\">How Zustand is Used in This Project\u003C/h2>\n\u003Cp>In this project, Zustand is used to manage the search state across the application. This includes handling the user’s search query, selected category, price range, sorting options, and rating filters.\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"creating-the-store\">Creating the Store\u003C/h2>\n\u003Cp>We create a Zustand store using the \u003Ccode>create\u003C/code> function. The store manages various pieces of state related to search functionality, such as the search query, category, price range, sort options, and ratings.\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">import\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { create } \u003C/span>\u003Cspan style=\"color:#F97583\">from\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"zustand\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">interface\u003C/span>\u003Cspan style=\"color:#B392F0\"> SearchStore\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  searchQuery\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  selectCategory\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  priceRange\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  selectSortOption\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#FFAB70\">  selectRating\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSearchQuery\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">query\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> void\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSelectCategory\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">category\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> void\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setPriceRange\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">range\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> void\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSelectSortOption\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">option\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> void\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSelectRating\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003Cspan style=\"color:#FFAB70\">rating\u003C/span>\u003Cspan style=\"color:#F97583\">:\u003C/span>\u003Cspan style=\"color:#79B8FF\"> string\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#79B8FF\"> void\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> useSearchStore\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#B392F0\"> create\u003C/span>\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#B392F0\">SearchStore\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>((\u003C/span>\u003Cspan style=\"color:#FFAB70\">set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> ({\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  searchQuery: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  selectCategory: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  priceRange: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  selectSortOption: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  selectRating: \u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">,\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSearchQuery\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: (\u003C/span>\u003Cspan style=\"color:#FFAB70\">query\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ searchQuery: query }),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSelectCategory\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: (\u003C/span>\u003Cspan style=\"color:#FFAB70\">category\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ selectCategory: category }),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setPriceRange\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: (\u003C/span>\u003Cspan style=\"color:#FFAB70\">range\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ priceRange: range }),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSelectSortOption\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: (\u003C/span>\u003Cspan style=\"color:#FFAB70\">option\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ selectSortOption: option }),\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">  setSelectRating\u003C/span>\u003Cspan style=\"color:#E1E4E8\">: (\u003C/span>\u003Cspan style=\"color:#FFAB70\">rating\u003C/span>\u003Cspan style=\"color:#E1E4E8\">) \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#B392F0\"> set\u003C/span>\u003Cspan style=\"color:#E1E4E8\">({ selectRating: rating })\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}));\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">export\u003C/span>\u003Cspan style=\"color:#F97583\"> default\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> useSearchStore;\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"store-state-and-actions\">Store State and Actions\u003C/h4>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>State Variables:\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>searchQuery: The current search query input by the user.\u003C/li>\n\u003Cli>selectCategory: The category filter selected by the user.\u003C/li>\n\u003Cli>priceRange: The price range filter.\u003C/li>\n\u003Cli>selectSortOption: The sort option applied to the search results.\u003C/li>\n\u003Cli>selectRating: The rating filter applied to the results.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Actions (Setters):\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>setSearchQuery(query): Updates the search query.\u003C/li>\n\u003Cli>setSelectCategory(category): Updates the selected category.\u003C/li>\n\u003Cli>setPriceRange(range): Updates the price range.\u003C/li>\n\u003Cli>setSelectSortOption(option): Updates the sorting option.\u003C/li>\n\u003Cli>setSelectRating(rating): Updates the selected rating.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Ch4 id=\"accessing-the-store-in-components\">Accessing the Store in Components\u003C/h4>\n\u003Cp>To use Zustand state and actions in your React components, you use the useSearchStore hook.\u003C/p>\n\u003Cp>\u003Cstrong>Example: Search Input Component\u003C/strong>\nThe SearchInput component allows users to input a search query. It uses the global searchQuery from the store and updates it with setSearchQuery:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"ts\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#B392F0\"> SearchInput\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> () \u003C/span>\u003Cspan style=\"color:#F97583\">=>\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">searchQuery\u003C/span>\u003Cspan style=\"color:#E1E4E8\">, \u003C/span>\u003Cspan style=\"color:#79B8FF\">setSearchQuery\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#B392F0\"> useSearchStore\u003C/span>\u003Cspan style=\"color:#E1E4E8\">();\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">  return\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> (\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#FFAB70\">Input\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      type\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"search\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      value\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{searchQuery}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      onChange\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{(e) => \u003C/span>\u003Cspan style=\"color:#B392F0\">setSearchQuery\u003C/span>\u003Cspan style=\"color:#E1E4E8\">(e.target.value)}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      placeholder\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Search...\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"search-input\"\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">    />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  );\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">};\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",
  { "headings": 103, "imagePaths": 122, "frontmatter": 93 },
  [104, 107, 110, 113, 116, 119],
  { "depth": 25, "slug": 105, "text": 106 },
  "zustand-documentation",
  "Zustand Documentation",
  { "depth": 29, "slug": 108, "text": 109 },
  "what-is-zustand",
  "What is Zustand?",
  { "depth": 29, "slug": 111, "text": 112 },
  "how-zustand-is-used-in-this-project",
  "How Zustand is Used in This Project",
  { "depth": 29, "slug": 114, "text": 115 },
  "creating-the-store",
  "Creating the Store",
  { "depth": 43, "slug": 117, "text": 118 },
  "store-state-and-actions",
  "Store State and Actions",
  { "depth": 43, "slug": 120, "text": 121 },
  "accessing-the-store-in-components",
  "Accessing the Store in Components",
  [],
  "routing-astro",
  { "id": 123, "data": 125, "body": 129, "filePath": 130, "digest": 131, "rendered": 132 },
  { "title": 126, "description": 127, "date": 128 },
  "How routing works in Astro ?",
  "The full guide on routing in astro framework . The easy and simple guide to understand and implement routing ",
  "31/12/2024",
  "# **Adding a New Route in Astro.js**\n\nAstro uses a **file-based routing system**, where the file structure in the `src/pages` directory determines the routes.\n\n## **Steps to Add a New Route**\n\n1. **Create a New File in the `src/pages` Directory**\n\n   - Go to the `src/pages` directory in your project.\n   - Create a new file for your route. For example:\n     - `about.astro` → `/about` route\n     - `blog.astro` → `/blog` route\n     - `contact.html` → `/contact` route (static HTML)\n\n2. **Add Content to the New F ile**\n\n   Add the desired HTML or Astro component syntax inside your new file. For example, in `about.astro`:\n\n   ```astro\n   ---\n   // Frontmatter (optional)\n   const pageTitle = \"About Us\";\n   ---\n\n   \u003Chtml>\n     \u003Chead>\n       \u003Ctitle>{pageTitle}\u003C/title>\n     \u003C/head>\n     \u003Cbody>\n       \u003Ch1>{pageTitle}\u003C/h1>\n       \u003Cp>Welcome to the About page of our Astro site!\u003C/p>\n     \u003C/body>\n   \u003C/html>\n   ```\n\n3. **Start the Development Server**\n\n   Run the Astro development server to see your changes:\n\n   ```bash\n   npm run dev\n   ```\n\n   Visit `http://localhost:3000/about` (or the corresponding route) in your browser.\n\n4. **Optional: Add Dynamic Routes**\n\n   If you need dynamic routes (e.g., `/blog/:slug`), create a file with square brackets in its name, such as `[slug].astro`. Example:\n\n   - File: `src/pages/blog/[slug].astro`\n\n     ```astro\n     ---\n     const { slug } = Astro.params;\n     ---\n\n     \u003Ch1>Blog Post: {slug}\u003C/h1>\n     ```\n\n   - Visit `/blog/example` to see the route in action.\n\n5. **Optional: Add Links to Your Route**\n\n   Update your site's navigation to link to the new route. For example, in your `src/layouts/Header.astro`:\n\n   ```astro\n   \u003Cnav>\n     \u003Ca href=\"/\">Home\u003C/a>\n     \u003Ca href=\"/about\">About\u003C/a>\n     \u003Ca href=\"/blog\">Blog\u003C/a>\n   \u003C/nav>\n   ```\n\n---\n\n### **Example File Structure for Routes**\n\n```\nsrc/\n├── pages/\n│   ├── index.astro       → /\n│   ├── about.astro       → /about\n│   ├── blog.astro        → /blog\n│   ├── blog/\n│   │   ├── [slug].astro  → /blog/:slug\n```",
  "src/content/blog/routing-astro.md",
  "6a1691ec7f49b76c",
  { "html": 133, "metadata": 134 },
  "\u003Ch1 id=\"adding-a-new-route-in-astrojs\">\u003Cstrong>Adding a New Route in Astro.js\u003C/strong>\u003C/h1>\n\u003Cp>Astro uses a \u003Cstrong>file-based routing system\u003C/strong>, where the file structure in the \u003Ccode>src/pages\u003C/code> directory determines the routes.\u003C/p>\n\u003Ch2 id=\"steps-to-add-a-new-route\">\u003Cstrong>Steps to Add a New Route\u003C/strong>\u003C/h2>\n\u003Col>\n\u003Cli>\n\u003Cp>\u003Cstrong>Create a New File in the \u003Ccode>src/pages\u003C/code> Directory\u003C/strong>\u003C/p>\n\u003Cul>\n\u003Cli>Go to the \u003Ccode>src/pages\u003C/code> directory in your project.\u003C/li>\n\u003Cli>Create a new file for your route. For example:\n\u003Cul>\n\u003Cli>\u003Ccode>about.astro\u003C/code> → \u003Ccode>/about\u003C/code> route\u003C/li>\n\u003Cli>\u003Ccode>blog.astro\u003C/code> → \u003Ccode>/blog\u003C/code> route\u003C/li>\n\u003Cli>\u003Ccode>contact.html\u003C/code> → \u003Ccode>/contact\u003C/code> route (static HTML)\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Add Content to the New F ile\u003C/strong>\u003C/p>\n\u003Cp>Add the desired HTML or Astro component syntax inside your new file. For example, in \u003Ccode>about.astro\u003C/code>:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">---\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">// Frontmatter (optional)\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#79B8FF\"> pageTitle\u003C/span>\u003Cspan style=\"color:#F97583\"> =\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> \"About Us\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">---\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">head\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">title\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{pageTitle}&#x3C;/title>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">head\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>{pageTitle}&#x3C;/h1>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Welcome to the About page of our Astro site!&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">p\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">body\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">html\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Start the Development Server\u003C/strong>\u003C/p>\n\u003Cp>Run the Astro development server to see your changes:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"bash\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">npm\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> run\u003C/span>\u003Cspan style=\"color:#9ECBFF\"> dev\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Cp>Visit \u003Ccode>http://localhost:3000/about\u003C/code> (or the corresponding route) in your browser.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Optional: Add Dynamic Routes\u003C/strong>\u003C/p>\n\u003Cp>If you need dynamic routes (e.g., \u003Ccode>/blog/:slug\u003C/code>), create a file with square brackets in its name, such as \u003Ccode>[slug].astro\u003C/code>. Example:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>File: \u003Ccode>src/pages/blog/[slug].astro\u003C/code>\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">---\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#F97583\">const\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> { \u003C/span>\u003Cspan style=\"color:#79B8FF\">slug\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> } \u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> Astro.params;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#6A737D\">---\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Blog Post: {slug}&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">h1\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003Cli>\n\u003Cp>Visit \u003Ccode>/blog/example\u003C/code> to see the route in action.\u003C/p>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Optional: Add Links to Your Route\u003C/strong>\u003C/p>\n\u003Cp>Update your site’s navigation to link to the new route. For example, in your \u003Ccode>src/layouts/Header.astro\u003C/code>:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"astro\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Home&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/about\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>About&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#B392F0\"> href\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"/blog\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Blog&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">a\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">nav\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ol>\n\u003Chr>\n\u003Ch3 id=\"example-file-structure-for-routes\">\u003Cstrong>Example File Structure for Routes\u003C/strong>\u003C/h3>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"plaintext\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan>src/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>├── pages/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── index.astro       → /\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── about.astro       → /about\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── blog.astro        → /blog\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   ├── blog/\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan>│   │   ├── [slug].astro  → /blog/:slug\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",
  { "headings": 135, "imagePaths": 145, "frontmatter": 125 },
  [136, 139, 142],
  { "depth": 25, "slug": 137, "text": 138 },
  "adding-a-new-route-in-astrojs",
  "Adding a New Route in Astro.js",
  { "depth": 29, "slug": 140, "text": 141 },
  "steps-to-add-a-new-route",
  "Steps to Add a New Route",
  { "depth": 33, "slug": 143, "text": 144 },
  "example-file-structure-for-routes",
  "Example File Structure for Routes",
  [],
  "style-guide",
  { "id": 146, "data": 148, "body": 152, "filePath": 153, "digest": 154, "rendered": 155 },
  { "title": 149, "description": 150, "date": 151 },
  "The style guide the must know to start the code",
  "The full guid on file structure , css naming convention , tailwind usage and , css classes naming convention . ",
  "26/12/2024",
  "# **Style Guide Documentation**\n\nThis document outlines the style guide we follow to maintain consistency and readability in our codebase. These principles apply to both CSS and JavaScript/TypeScript components.\n\n---\n\n## **1. File Structure**\n\n- Use a clear and consistent folder structure.\n- Place CSS files for components inside the `assets/styles` folder, named according to the component (e.g., `result-products.css` for `ResultProducts` component).\n- Keep reusable styles in a `global.css` file.\n\n---\n\n## **2. CSS Naming Convention**\n\n- Use `kebab-case` for CSS class names.\n  - Example: `card__image`, `container__card`\n- For component-specific styles, use the format:  \n  `componentName__element` (e.g., `card__image` for an image in the `Card` component).\n- Use utility classes from Tailwind CSS wherever possible for common properties (e.g., margins, padding, colors).\n\n---\n\n## **3. Tailwind CSS Usage**\n\n- **Use Tailwind utilities for common tasks** like spacing, typography, and colors:\n\n  - Example:\n\n    ```html\n    \u003Cdiv class=\"rounded-lg bg-white p-4 text-gray-800\">\u003C/div>\n    ```\n\n- **Avoid redundancy:** Don't add CSS rules for properties already provided by Tailwind classes.\n- Create custom styles only when:\n  - Tailwind utilities cannot achieve the desired layout or behavior.\n  - Styles are specific to a particular component.\n\n---\n\n## **4. Component-Specific CSS**\n\n- For each React component, create a corresponding CSS file if it requires custom styles.\n- **CSS file naming**: Use the same name as the component, in lowercase and hyphen-separated.\n  - Example:\n    - Component: `ResultProducts.tsx`\n    - CSS File: `result-products.css`\n- Limit the use of global styles to prevent style conflicts.\n\n---\n\n## **5. Naming Variables & Functions**\n\n- Use `camelCase` for variables, functions, and methods.\n  - Example: `filterItemsByRating`, `sortItems`\n- Use `PascalCase` for React components and TypeScript interfaces/types.\n  - Example: `ResultProducts`, `ProductProps`\n- Use `UPPER_SNAKE_CASE` for constants.\n  - Example: `BASE_IMAGE_PATH`\n\n---\n\n## **7. JSX Structure**\n\n- **Keep JSX clean and readable:**\n  - Use meaningful class names.\n  - Avoid inline styles unless absolutely necessary.\n- Wrap component logic (e.g., filtering, sorting) in separate functions for clarity.\n\n### **12. Example: Component and CSS Pair**\n\n#### React Component (`ResultProducts.tsx`)\n\n```tsx\n\u003Cdiv className=\"container__card\">\n  \u003CCardBase className=\"card__base\">\n    \u003Cimg className=\"card__image\" src={imageSrc} alt=\"Product Image\" />\n    \u003CCardContent>\n      \u003CCardTitle className=\"card__content\">Product Name\u003C/CardTitle>\n    \u003C/CardContent>\n  \u003C/CardBase>\n\u003C/div>\n```\n\n#### CSS File (`result-products.css`)\n\n```css\n.container__card {\n  @apply rounded-lg border bg-white p-4 shadow-md;\n}\n\n.card__base {\n  @apply flex flex-col items-center;\n}\n\n.card__image {\n  @apply h-40 w-full rounded-md object-cover;\n}\n\n.card__content {\n  @apply text-lg font-semibold text-gray-800;\n}\n```",
  "src/content/blog/style-guide.md",
  "91da20c200d7a3ed",
  { "html": 156, "metadata": 157 },
  "\u003Ch1 id=\"style-guide-documentation\">\u003Cstrong>Style Guide Documentation\u003C/strong>\u003C/h1>\n\u003Cp>This document outlines the style guide we follow to maintain consistency and readability in our codebase. These principles apply to both CSS and JavaScript/TypeScript components.\u003C/p>\n\u003Chr>\n\u003Ch2 id=\"1-file-structure\">\u003Cstrong>1. File Structure\u003C/strong>\u003C/h2>\n\u003Cul>\n\u003Cli>Use a clear and consistent folder structure.\u003C/li>\n\u003Cli>Place CSS files for components inside the \u003Ccode>assets/styles\u003C/code> folder, named according to the component (e.g., \u003Ccode>result-products.css\u003C/code> for \u003Ccode>ResultProducts\u003C/code> component).\u003C/li>\n\u003Cli>Keep reusable styles in a \u003Ccode>global.css\u003C/code> file.\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"2-css-naming-convention\">\u003Cstrong>2. CSS Naming Convention\u003C/strong>\u003C/h2>\n\u003Cul>\n\u003Cli>Use \u003Ccode>kebab-case\u003C/code> for CSS class names.\n\u003Cul>\n\u003Cli>Example: \u003Ccode>card__image\u003C/code>, \u003Ccode>container__card\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>For component-specific styles, use the format:\u003Cbr>\n\u003Ccode>componentName__element\u003C/code> (e.g., \u003Ccode>card__image\u003C/code> for an image in the \u003Ccode>Card\u003C/code> component).\u003C/li>\n\u003Cli>Use utility classes from Tailwind CSS wherever possible for common properties (e.g., margins, padding, colors).\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"3-tailwind-css-usage\">\u003Cstrong>3. Tailwind CSS Usage\u003C/strong>\u003C/h2>\n\u003Cul>\n\u003Cli>\n\u003Cp>\u003Cstrong>Use Tailwind utilities for common tasks\u003C/strong> like spacing, typography, and colors:\u003C/p>\n\u003Cul>\n\u003Cli>\n\u003Cp>Example:\u003C/p>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"html\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> class\u003C/span>\u003Cspan style=\"color:#E1E4E8\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"rounded-lg bg-white p-4 text-gray-800\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>\n\u003Cp>\u003Cstrong>Avoid redundancy:\u003C/strong> Don’t add CSS rules for properties already provided by Tailwind classes.\u003C/p>\n\u003C/li>\n\u003Cli>\n\u003Cp>Create custom styles only when:\u003C/p>\n\u003Cul>\n\u003Cli>Tailwind utilities cannot achieve the desired layout or behavior.\u003C/li>\n\u003Cli>Styles are specific to a particular component.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"4-component-specific-css\">\u003Cstrong>4. Component-Specific CSS\u003C/strong>\u003C/h2>\n\u003Cul>\n\u003Cli>For each React component, create a corresponding CSS file if it requires custom styles.\u003C/li>\n\u003Cli>\u003Cstrong>CSS file naming\u003C/strong>: Use the same name as the component, in lowercase and hyphen-separated.\n\u003Cul>\n\u003Cli>Example:\n\u003Cul>\n\u003Cli>Component: \u003Ccode>ResultProducts.tsx\u003C/code>\u003C/li>\n\u003Cli>CSS File: \u003Ccode>result-products.css\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Limit the use of global styles to prevent style conflicts.\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"5-naming-variables--functions\">\u003Cstrong>5. Naming Variables &#x26; Functions\u003C/strong>\u003C/h2>\n\u003Cul>\n\u003Cli>Use \u003Ccode>camelCase\u003C/code> for variables, functions, and methods.\n\u003Cul>\n\u003Cli>Example: \u003Ccode>filterItemsByRating\u003C/code>, \u003Ccode>sortItems\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Use \u003Ccode>PascalCase\u003C/code> for React components and TypeScript interfaces/types.\n\u003Cul>\n\u003Cli>Example: \u003Ccode>ResultProducts\u003C/code>, \u003Ccode>ProductProps\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Use \u003Ccode>UPPER_SNAKE_CASE\u003C/code> for constants.\n\u003Cul>\n\u003Cli>Example: \u003Ccode>BASE_IMAGE_PATH\u003C/code>\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003C/ul>\n\u003Chr>\n\u003Ch2 id=\"7-jsx-structure\">\u003Cstrong>7. JSX Structure\u003C/strong>\u003C/h2>\n\u003Cul>\n\u003Cli>\u003Cstrong>Keep JSX clean and readable:\u003C/strong>\n\u003Cul>\n\u003Cli>Use meaningful class names.\u003C/li>\n\u003Cli>Avoid inline styles unless absolutely necessary.\u003C/li>\n\u003C/ul>\n\u003C/li>\n\u003Cli>Wrap component logic (e.g., filtering, sorting) in separate functions for clarity.\u003C/li>\n\u003C/ul>\n\u003Ch3 id=\"12-example-component-and-css-pair\">\u003Cstrong>12. Example: Component and CSS Pair\u003C/strong>\u003C/h3>\n\u003Ch4 id=\"react-component-resultproductstsx\">React Component (\u003Ccode>ResultProducts.tsx\u003C/code>)\u003C/h4>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"tsx\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"container__card\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">CardBase\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"card__base\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#85E89D\">img\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"card__image\"\u003C/span>\u003Cspan style=\"color:#B392F0\"> src\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#E1E4E8\">{imageSrc} \u003C/span>\u003Cspan style=\"color:#B392F0\">alt\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"Product Image\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> />\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">CardContent\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">      &#x3C;\u003C/span>\u003Cspan style=\"color:#79B8FF\">CardTitle\u003C/span>\u003Cspan style=\"color:#B392F0\"> className\u003C/span>\u003Cspan style=\"color:#F97583\">=\u003C/span>\u003Cspan style=\"color:#9ECBFF\">\"card__content\"\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>Product Name&#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">CardTitle\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">    &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">CardContent\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  &#x3C;/\u003C/span>\u003Cspan style=\"color:#79B8FF\">CardBase\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">&#x3C;/\u003C/span>\u003Cspan style=\"color:#85E89D\">div\u003C/span>\u003Cspan style=\"color:#E1E4E8\">>\u003C/span>\u003C/span>\u003C/code>\u003C/pre>\n\u003Ch4 id=\"css-file-result-productscss\">CSS File (\u003Ccode>result-products.css\u003C/code>)\u003C/h4>\n\u003Cpre class=\"astro-code github-dark\" style=\"background-color:#24292e;color:#e1e4e8; overflow-x: auto;\" tabindex=\"0\" data-language=\"css\">\u003Ccode>\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.container__card\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  @\u003C/span>\u003Cspan style=\"color:#79B8FF\">apply\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rounded-lg\u003C/span>\u003Cspan style=\"color:#79B8FF\"> border\u003C/span>\u003Cspan style=\"color:#79B8FF\"> bg-white\u003C/span>\u003Cspan style=\"color:#79B8FF\"> p-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">4 \u003C/span>\u003Cspan style=\"color:#79B8FF\">shadow-md\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.card__base\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  @\u003C/span>\u003Cspan style=\"color:#79B8FF\">apply\u003C/span>\u003Cspan style=\"color:#79B8FF\"> flex\u003C/span>\u003Cspan style=\"color:#79B8FF\"> flex-col\u003C/span>\u003Cspan style=\"color:#79B8FF\"> items-center\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.card__image\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  @\u003C/span>\u003Cspan style=\"color:#79B8FF\">apply\u003C/span>\u003Cspan style=\"color:#79B8FF\"> h-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">40 \u003C/span>\u003Cspan style=\"color:#79B8FF\">w-full\u003C/span>\u003Cspan style=\"color:#79B8FF\"> rounded-md\u003C/span>\u003Cspan style=\"color:#79B8FF\"> object-cover\u003C/span>\u003Cspan style=\"color:#E1E4E8\">;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#B392F0\">.card__content\u003C/span>\u003Cspan style=\"color:#E1E4E8\"> {\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">  @\u003C/span>\u003Cspan style=\"color:#79B8FF\">apply\u003C/span>\u003Cspan style=\"color:#79B8FF\"> text-lg\u003C/span>\u003Cspan style=\"color:#79B8FF\"> font-semibold\u003C/span>\u003Cspan style=\"color:#79B8FF\"> text-gray-\u003C/span>\u003Cspan style=\"color:#E1E4E8\">800;\u003C/span>\u003C/span>\n\u003Cspan class=\"line\">\u003Cspan style=\"color:#E1E4E8\">}\u003C/span>\u003C/span>\u003C/code>\u003C/pre>",
  { "headings": 158, "imagePaths": 189, "frontmatter": 148 },
  [159, 162, 165, 168, 171, 174, 177, 180, 183, 186],
  { "depth": 25, "slug": 160, "text": 161 },
  "style-guide-documentation",
  "Style Guide Documentation",
  { "depth": 29, "slug": 163, "text": 164 },
  "1-file-structure",
  "1. File Structure",
  { "depth": 29, "slug": 166, "text": 167 },
  "2-css-naming-convention",
  "2. CSS Naming Convention",
  { "depth": 29, "slug": 169, "text": 170 },
  "3-tailwind-css-usage",
  "3. Tailwind CSS Usage",
  { "depth": 29, "slug": 172, "text": 173 },
  "4-component-specific-css",
  "4. Component-Specific CSS",
  { "depth": 29, "slug": 175, "text": 176 },
  "5-naming-variables--functions",
  "5. Naming Variables & Functions",
  { "depth": 29, "slug": 178, "text": 179 },
  "7-jsx-structure",
  "7. JSX Structure",
  { "depth": 33, "slug": 181, "text": 182 },
  "12-example-component-and-css-pair",
  "12. Example: Component and CSS Pair",
  { "depth": 43, "slug": 184, "text": 185 },
  "react-component-resultproductstsx",
  "React Component (ResultProducts.tsx)",
  { "depth": 43, "slug": 187, "text": 188 },
  "css-file-result-productscss",
  "CSS File (result-products.css)",
  [],
  "articles",
  ["Map", 192, 193],
  "terms",
  { "id": 192, "data": 194, "body": 197, "filePath": 198, "digest": 199, "rendered": 200 },
  { "title": 195, "author": 196 },
  "Terms & Conditions",
  "Admin",
  "Welcome to COMPANY-NAME! These terms and conditions outline the rules and regulations for the use of COMPANY-NAME's Website, located at [COMPANY-NAME.com](https://www.COMPANY-NAME.com).\n\nBy accessing this website, we assume you accept these terms and conditions. Do not continue to use [Your Company\nName] if you do not agree to take all of the terms and conditions stated on this page.\n\nThe following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: \"Client\", \"You\" and \"Your\" refers to you, the person log on this website and compliant to the Company's terms and conditions.\n\"The Company\", \"Ourselves\", \"We\", \"Our\" and \"Us\", refers to our Company. \"Party\", \"Parties\", or \"Us\", refers to both the Client and ourselves. All terms refer to the offer, acceptance, and\nconsideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client's needs in respect of the provision of the\nCompany's stated services, in accordance with and subject to, prevailing law of Netherlands. Any use of the above terminology or other words in the singular, plural, capitalization, and/or he/she or they, are taken as\ninterchangeable and therefore as referring to same.\n\n## Cookies\n\nWe employ the use of cookies. By accessing COMPANY-NAME, you agreed to use cookies in agreement with the COMPANY-NAME's Privacy Policy.\n\nMost interactive websites use cookies to let us retrieve the user's details for each visit. Cookies are used by\nour website to enable the functionality of certain areas to make it easier for people visiting our website. Some\nof our affiliate/advertising partners may also use cookies.\n\n## License\n\nUnless otherwise stated, COMPANY-NAME and/or its licensors own the intellectual property rights for all material on COMPANY-NAME. All intellectual property rights are reserved.\nYou may access this from COMPANY-NAME for your own personal use subjected to restrictions set in these terms and conditions.\n\n### You must not\n\n- Republish material from COMPANY-NAME\n- Sell, rent, or sub-license material from COMPANY-NAME\n- Reproduce, duplicate or copy material from COMPANY-NAME\n- Redistribute content from COMPANY-NAME\n\nIf you have any questions about our Terms and Conditions, please [contact us](/contact)",
  "src/content/articles/terms.md",
  "c9a57ebc5b9030f2",
  { "html": 201, "metadata": 202 },
  "\u003Cp>Welcome to COMPANY-NAME! These terms and conditions outline the rules and regulations for the use of COMPANY-NAME’s Website, located at \u003Ca href=\"https://www.COMPANY-NAME.com\">COMPANY-NAME.com\u003C/a>.\u003C/p>\n\u003Cp>By accessing this website, we assume you accept these terms and conditions. Do not continue to use [Your Company\nName] if you do not agree to take all of the terms and conditions stated on this page.\u003C/p>\n\u003Cp>The following terminology applies to these Terms and Conditions, Privacy Statement and Disclaimer Notice and all Agreements: “Client”, “You” and “Your” refers to you, the person log on this website and compliant to the Company’s terms and conditions.\n“The Company”, “Ourselves”, “We”, “Our” and “Us”, refers to our Company. “Party”, “Parties”, or “Us”, refers to both the Client and ourselves. All terms refer to the offer, acceptance, and\nconsideration of payment necessary to undertake the process of our assistance to the Client in the most appropriate manner for the express purpose of meeting the Client’s needs in respect of the provision of the\nCompany’s stated services, in accordance with and subject to, prevailing law of Netherlands. Any use of the above terminology or other words in the singular, plural, capitalization, and/or he/she or they, are taken as\ninterchangeable and therefore as referring to same.\u003C/p>\n\u003Ch2 id=\"cookies\">Cookies\u003C/h2>\n\u003Cp>We employ the use of cookies. By accessing COMPANY-NAME, you agreed to use cookies in agreement with the COMPANY-NAME’s Privacy Policy.\u003C/p>\n\u003Cp>Most interactive websites use cookies to let us retrieve the user’s details for each visit. Cookies are used by\nour website to enable the functionality of certain areas to make it easier for people visiting our website. Some\nof our affiliate/advertising partners may also use cookies.\u003C/p>\n\u003Ch2 id=\"license\">License\u003C/h2>\n\u003Cp>Unless otherwise stated, COMPANY-NAME and/or its licensors own the intellectual property rights for all material on COMPANY-NAME. All intellectual property rights are reserved.\nYou may access this from COMPANY-NAME for your own personal use subjected to restrictions set in these terms and conditions.\u003C/p>\n\u003Ch3 id=\"you-must-not\">You must not\u003C/h3>\n\u003Cul>\n\u003Cli>Republish material from COMPANY-NAME\u003C/li>\n\u003Cli>Sell, rent, or sub-license material from COMPANY-NAME\u003C/li>\n\u003Cli>Reproduce, duplicate or copy material from COMPANY-NAME\u003C/li>\n\u003Cli>Redistribute content from COMPANY-NAME\u003C/li>\n\u003C/ul>\n\u003Cp>If you have any questions about our Terms and Conditions, please \u003Ca href=\"/contact\">contact us\u003C/a>\u003C/p>",
  { "headings": 203, "imagePaths": 213, "frontmatter": 214 },
  [204, 207, 210],
  { "depth": 29, "slug": 205, "text": 206 },
  "cookies",
  "Cookies",
  { "depth": 29, "slug": 208, "text": 209 },
  "license",
  "License",
  { "depth": 33, "slug": 211, "text": 212 },
  "you-must-not",
  "You must not",
  [],
  { "title": 195, "author": 196 }
]
