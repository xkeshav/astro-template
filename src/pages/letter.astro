---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Interactive Letter">
  <div class="controls" id="controls">
    <div class="control-group">
      <label>Background:</label>
      <select id="bgSelector">
        <option value="none">None</option>
        <option value="gradient1">Gradient 1</option>
        <option value="gradient2">Gradient 2</option>
        <option value="pattern1">Pattern 1</option>
      </select>
      <button id="toggleBg">Toggle Background</button>
    </div>

    <div class="control-group">
      <label>Font:</label>
      <select id="fontSelector">
        <option value="Arial">Arial</option>
        <option value="Georgia">Georgia</option>
        <option value="Verdana">Verdana</option>
        <option value="Times New Roman">Times New Roman</option>
      </select>
      <input type="color" id="colorPicker" value="#000000">
    </div>

    <div class="control-group">
      <label>Sound:</label>
      <select id="soundSelector">
        <option value="sound1">Sound 1</option>
        <option value="sound2">Sound 2</option>
        <option value="sound3">Sound 3</option>
      </select>
      <button id="toggleSound">
        <span class="icon">ðŸ”Š</span>
      </button>
    </div>
  </div>

  <div class="letter-container" id="letterContainer">
    <div class="big-letter" id="bigLetter">A</div>
  </div>

  <div class="meaning-section">
    <h2>Meaning</h2>
    <p>The letter 'A' stands for...</p>
    <div class="meaning-content">
      <p>â€¢ First letter of the English alphabet</p>
      <p>â€¢ Represents excellence in grading systems</p>
      <p>â€¢ Phonetically represents various sounds across languages</p>
      <p>â€¢ Historical origins trace back to ancient Phoenician alphabet</p>
      <!-- Add more meaning content as needed -->
    </div>
  </div>
</Layout>

<style>
  .controls {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.95);
    padding: 1rem;
    z-index: 100;
    display: flex;
    justify-content: space-around;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
  }

  .control-group {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .control-group label {
    font-weight: bold;
  }

  select, button {
    padding: 0.5rem;
    border-radius: 4px;
    border: 1px solid #ccc;
  }

  button {
    cursor: pointer;
    background: #fff;
    transition: background 0.3s;
  }

  button:hover {
    background: #f0f0f0;
  }

  .letter-container {
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-top: 60px;
  }

  .big-letter {
    font-size: 56svmin;
    font-weight: bold;
    transition: all 0.3s;
  }

  .meaning-section {
    padding: 2rem;
    background: white;
    margin-top: 2rem;
  }

  .meaning-content {
    max-width: 800px;
    margin: 0 auto;
    line-height: 1.6;
  }

  /* Gradient backgrounds */
  .bg-gradient1 {
    background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
  }

  .bg-gradient2 {
    background: linear-gradient(45deg, #a8e6cf, #dcedc1);
  }

  .bg-pattern1 {
    background-image: repeating-linear-gradient(
      45deg,
      rgba(0, 0, 0, 0.1) 0px,
      rgba(0, 0, 0, 0.1) 2px,
      transparent 2px,
      transparent 4px
    );
  }
</style>

<script>
  let isSoundEnabled = true;
  let currentAudio = new Audio('/sounds/sound1.wav');

  // DOM Elements
  const controls = document.getElementById('controls');
  const bigLetter = document.getElementById('bigLetter');
  const letterContainer = document.getElementById('letterContainer');
  const bgSelector = document.getElementById('bgSelector');
  const fontSelector = document.getElementById('fontSelector');
  const colorPicker = document.getElementById('colorPicker');
  const soundSelector = document.getElementById('soundSelector');
  const toggleSound = document.getElementById('toggleSound');
  const toggleBg = document.getElementById('toggleBg');

  // Event Listeners
  document.addEventListener('keydown', handleKeyPress);
  bgSelector?.addEventListener('change', updateBackground);
  fontSelector?.addEventListener('change', updateFont);
  colorPicker?.addEventListener('change', updateColor);
  soundSelector?.addEventListener('change', updateSound);
  toggleSound?.addEventListener('click', toggleSoundState);
  toggleBg?.addEventListener('click', toggleBackground);

  // Handle key press
  function handleKeyPress(e) {
    if (e.key.toLowerCase() === 'a') {
      bigLetter.style.animation = 'letterPop 0.3s ease-out';
      if (isSoundEnabled) {
        playSound();
      }
      setTimeout(() => {
        bigLetter.style.animation = '';
      }, 300);
    }
  }

  // Update functions
  function updateBackground() {
    letterContainer.className = 'letter-container';
    if (bgSelector.value !== 'none') {
      letterContainer.classList.add(`bg-${bgSelector.value}`);
    }
  }

  function updateFont() {
    bigLetter.style.fontFamily = fontSelector.value;
  }

  function updateColor() {
    bigLetter.style.color = colorPicker.value;
  }

  function updateSound() {
    currentAudio = new Audio(`/sounds/${soundSelector.value}.wav`);
  }

  function toggleSoundState() {
    isSoundEnabled = !isSoundEnabled;
    toggleSound.querySelector('.icon').textContent = isSoundEnabled ? 'ðŸ”Š' : 'ðŸ”‡';
  }

  function toggleBackground() {
    letterContainer.classList.toggle('no-background');
  }

  function playSound() {
    currentAudio.currentTime = 0;
    currentAudio.play();
  }

  // Intersection Observer for sticky header
  const observer = new IntersectionObserver(
    ([e]) => {
      controls.classList.toggle('sticky', e.intersectionRatio < 1);
    },
    { threshold: [1] }
  );

  observer.observe(controls);
</script>